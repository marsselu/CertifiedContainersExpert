apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-deployment
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-deployment
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx-deployment
    spec:
      containers:
      - image: nginx:1.20.1
        name: nginx
        resources:
          limits:
            cpu: "0.5"
            memory: "256Mi"
          requests:
            cpu: "0.25"
            memory: 128Mi
        livenessProbe: # Verifica se o container está vivo e reinicia se necessário
          exec:
            command:
            - curl
            - -f
            - http://localhost:80/
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 2
          timeoutSeconds: 5
        readinessProbe: # Verifica se o container está pronto para receber tráfego e remove da rotação se não estiver
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 2
          timeoutSeconds: 5
        startupProbe: # Verifica se o container iniciou corretamente, útil para aplicações que demoram a iniciar
          tcpSocket:
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10 # Tempo entre as verificações
          successThreshold: 1
          failureThreshold: 2 # Verifica se o container iniciou corretamente, útil para aplicações que demoram a iniciar
          timeoutSeconds: 5
